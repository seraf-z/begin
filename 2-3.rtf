{\rtf1\ansi\ansicpg1251\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /*\
3\
\uc0\u1053 \u1072 \u1087 \u1080 \u1089 \u1072 \u1090 \u1100  \u1092 \u1091 \u1085 \u1082 \u1094 \u1080 \u1102 , \u1082 \u1086 \u1090 \u1086 \u1072 \u1103  \u1088 \u1072 \u1079 \u1073 \u1080 \u1074 \u1072 \u1077 \u1090  \u1087 \u1077 \u1088 \u1077 \u1076 \u1072 \u1085 \u1085 \u1099 \u1081  \u1084 \u1072 \u1089 \u1089 \u1080 \u1074 \'a0\
arr \uc0\u1085 \u1072  \u1075 \u1088 \u1091 \u1087 \u1087 \u1099  \u1076 \u1083 \u1080 \u1085 \u1086 \u1081  size.\
function chunkArrayInGroups(arr, size) \{\
\'a0 // your code\
\}\
chunkArrayInGroups(["a", "b", "c", "d"], 2); // [["a", "b"], ["c", "d"]]\
*/\
\cb1 \
\
\cb3 \'a0 \'a0\'a0\
function chunkArrayInGroups(arr, n)\{\
\'a0\'a0\
\'a0 if ( arr.length % n !== 0) \{\
\'a0 \'a0 return alert('WRONG!!!');\
\'a0 \'a0\'a0\
\'a0 \} else \{\
\'a0 \'a0 \'a0var arrFin = [];\
\'a0 \'a0 \'a0var arrBuff = [];\
\'a0 \'a0 \'a0var limit = arr.length / n;\'a0\
\'a0 \'a0 \'a0var start = 0;\
\'a0 \'a0 \'a0var stop = limit;\
\cb1 \
\cb3 \'a0 \'a0 \'a0for ( i = 0; i < n; i++ ) \{\'a0\
\'a0 \'a0 \'a0 \'a0 \'a0for (k = 0, j = start; k < limit - 1, j < stop; j++, k++) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 arrBuff[k] = arr[j];\
\'a0 \'a0 \'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 arrFin[i] = arrBuff;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 arrBuff = []; \'a0 \'a0\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 start = stop;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 stop = stop + limit; \'a0\
\'a0 \'a0 \'a0\}\
\'a0 \} \'a0return arrFin;\
\}\
\'a0 \'a0 \'a0\
\cb1 \
\cb3 \'a0\
\cb1 \
\cb3 var arr1 = [1,2,3,4,5,6,9,10,11,12,14,15,16,17,18,190];\
\cb1 \
\cb3 console.log(chunkArrayInGroups(["a", "b", "c", "d"], 2));\
}